Overview directory structure
============================
.. _dir-structure:

After installation, we should have a working application
with the following file-and directory-structure.

We are trying
FHS
https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard

.. note::

  Not *all* files and directories are listed. Only the
  ones that are of interest to us.


.. code-block:: sh


  /opt/envs/demo-flask    (=our project/packageroot-directory)
      bin/  ->  symlink to .venv/bin/
      lib/  ->  symlink to .venv/lib/
      pyvenv.cfg  ->  symlink to .venv/pyvenv.cfg

      dist/   (generated by "poetry build")
          libranet_flask-0.1.0.tar.gz
          libranet_flask-0.1.0-py3-none-any.whl

      docker/
          dockerfile

      docs/  (sphinx-based documentation)
          conf.py
          index.rst
          ...

      .env  (environment-var loaded in every python-process via sitecustomize)

      .venv/
          bin/
              activate
              flask
              gunicorn
              ipython
              python
              python3.11
              supervisorctl
              supervisord

          lib/
              python3.11/
                  site-packages/
                      ... (all installed package-dependencies
          pyvenv.cfg

      scripts/    (dir with executable files copied to bin-directory upon install)

      src/
          libranet_flask/    (our python-package)
              __init__.py

      tests/    (directory with tests, but not a python-module)
          conftest.py    (local file with custom pytest-fixtures)
          test_*.py

      var/
          cache/     # generated files, should be safe to delete
              mypy/
              pip/
              pytest/
              sphinx-doctrees/
              coverage.db    (generated by pytest-cov)

          html-docs       (generated by sphinx)
          html-coverage   (generated by pytest with test-coverage)

          log/
              10-debug.log
              20-info.log
              30-warnings.log
              40-errors.log    <- this file should remain empty in normal circumstances

          run/    (pid/socket/lock-files created when running a service)

          tmp/     (set as env-var $TMP/$TEMP/$TMPDIR)

      .dockerignore
      .flake8    (flake8 does not yet support config in pyproject.toml)
      .gitignore
      .pre-commit.yml
      makefile
      poetry.lock   (pinned dependencies)
      poetry.toml   (config for the poetry-executable)
      pyproject.toml (main config-file of your project)
